
// Copyright (c) 2010-2012 niXman (i dot nixman dog gmail dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
//
//
// Boost Software License - Version 1.0 - August 17th, 2003
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef _yas_test__forward_list_hpp__included_
#define _yas_test__forward_list_hpp__included_

#if defined(YAS_HAS_STD_FORWARD_LIST)

template<typename OA, typename IA>
bool forward_list_test() {
	std::forward_list<int> ilist1, ilist2;
	ilist1.push_front(1);
	ilist1.push_front(2);
	ilist1.push_front(4);
	ilist1.push_front(6);
	ilist1.push_front(23);
	ilist1.push_front(8);

	OA oa1;
	oa1 & ilist1;

	IA ia1(oa1.get_intrusive_buffer());
	ia1 & ilist2;

	if ( ilist1 != ilist2 ) {
		std::cout << "FORWARD LIST deserialization error! [1]" << std::endl;
		return false;
	}

	std::forward_list<std::string> slist1, slist2;
	slist1.push_front("23");
	slist1.push_front("56");
	slist1.push_front("22");
	slist1.push_front("76");
	slist1.push_front("17");

	OA oa2;
	oa2 & slist1;

	IA ia2(oa2.get_intrusive_buffer());
	ia2 & slist2;

	if ( slist1 != slist2 ) {
		std::cout << "FORWARD LIST deserialization error! [2]" << std::endl;
		return false;
	}

	return true;
}

#endif // defined(YAS_HAS_STD_FORWARD_LIST)

#endif // _yas_test__forward_list_hpp__included_
